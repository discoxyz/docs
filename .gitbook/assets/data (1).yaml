{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "//api.disco.xyz/",
            "description": "Main (production) server serving the Disco API"
        }
    ],
    "info": {
        "title": "Disco API v1",
        "description": "Welcome to the Private Beta v1 of Disco's REST API.\nPlease read the Overview and Getting Started links first, [here](http://docs.disco.xyz).\n\n# Requirements\nYou may likely need the following:\n  - A dedicated development team/person to work with our partnerships team: Eric/LDF to validate the use case.\n  - an onboarded Disco Profile\n  - Any library capable of making http requests (fetch, axios, httpie, etc)\n  - A valid API token (more below)\n\n# Authentication\nWe use Bearer Authentication. A token will be generated by the team once use-case is clearly identified and discussed. To request a API Token, please reach out to us directly at ask@disco.xyz.\n\n# Note\n**It is important to note that this product is currently also in Private Beta**. Behavior, uptime and endpoints are all subject to change.\n\n# Capabilities\nYou'll be able to query for the current users that exist, and display their credentials.\nThese are currently:\n  - Disco Official Membership Credentials issued to Disco Team Members\n  - Boys Club Membership Credentials issued to key members of Boys Club.\n",
        "version": "0.1.0"
    },
    "paths": {
        "/v1/profile/{DID}": {
            "get": {
                "summary": "Profile by DID",
                "description": "Given a valid DID, return Disco profile data.",
                "operationId": "DID",
                "parameters": [
                    {
                        "name": "DID",
                        "in": "path",
                        "description": "A decentralized identifier. This can be fetched from the URL of the Disco profile. It usually contain",
                        "schema": {
                            "type": "string",
                            "format": "did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful Operation!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "type": "array",
                                            "format": "of objects (Profile) unique",
                                            "default": "200 OK",
                                            "example": [
                                                {
                                                    "profile": {
                                                        "bio": "Me in the metaverse. Me in IRL!",
                                                        "name": "the-web3-yogi",
                                                        "avatar": "https://pbs.twimg.com/profile_images/1503385343730540544/dWdiICQX_400x400.jpg",
                                                        "ethAddress": "0xe6ff2d91f6eeee8bda4bcc562d63c431496fcf2a"
                                                    },
                                                    "linksPending": {
                                                        "discord": {
                                                            "handle": "ericc572#8044",
                                                            "signedVcString": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\"],\"type\":[\"VerifiableCredential\",\"AccountLinkageCredential\"],\"issuer\":{\"id\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96\"},\"issuanceDate\":\"2022-06-06T05:10:21.601Z\",\"id\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96#9fd90dea-1d44-41a5-9e18-29a3500fbf5f\",\"credentialSubject\":{\"id\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96\",\"type\":\"Discord\",\"username\":\"ericc572#8044\"},\"credentialSchema\":{\"id\":\"https://raw.githubusercontent.com/discoxyz/disco-schemas/main/json/AccountLinkageCredential/1-0-0.json\",\"type\":\"JsonSchemaValidator2018\"},\"proof\":{\"verificationMethod\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96#controller\",\"created\":\"2022-06-06T05:10:21.611Z\",\"proofPurpose\":\"assertionMethod\",\"type\":\"EthereumEip712Signature2021\",\"proofValue\":\"0xfe70a99157971f9c6ea3ad035f024f47fa58d77190e76a9fadca21c2db75c76a4e23900cd2834462cabcc515a97076b95fc965ef5522f449f36a24c3a3e1f4e21b\",\"eip712Domain\":{\"domain\":{\"chainId\":1,\"name\":\"Sign to link this account to your identifier\",\"version\":\"1\"},\"messageSchema\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"}],\"CredentialSchema\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"}],\"CredentialSubject\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"Issuer\":[{\"name\":\"id\",\"type\":\"string\"}],\"Proof\":[{\"name\":\"created\",\"type\":\"string\"},{\"name\":\"proofPurpose\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"verificationMethod\",\"type\":\"string\"}],\"VerifiableCredential\":[{\"name\":\"@context\",\"type\":\"string[]\"},{\"name\":\"credentialSchema\",\"type\":\"CredentialSchema\"},{\"name\":\"credentialSubject\",\"type\":\"CredentialSubject\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"issuanceDate\",\"type\":\"string\"},{\"name\":\"issuer\",\"type\":\"Issuer\"},{\"name\":\"proof\",\"type\":\"Proof\"},{\"name\":\"type\",\"type\":\"string[]\"}]},\"primaryType\":\"VerifiableCredential\"}}}"
                                                        },
                                                        "twitter": {
                                                            "handle": "the-web3-yogi",
                                                            "signedVcString": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\"],\"type\":[\"VerifiableCredential\",\"AccountLinkageCredential\"],\"issuer\":{\"id\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96\"},\"issuanceDate\":\"2022-06-28T17:30:50.890Z\",\"id\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96#ca4a4d45-d75f-4f8d-a6cd-3cac99c7e9fb\",\"credentialSubject\":{\"id\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96\",\"type\":\"Twitter\",\"username\":\"the-web3-yogi\"},\"credentialSchema\":{\"id\":\"https://raw.githubusercontent.com/discoxyz/disco-schemas/main/json/AccountLinkageCredential/1-0-0.json\",\"type\":\"JsonSchemaValidator2018\"},\"proof\":{\"verificationMethod\":\"did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96#controller\",\"created\":\"2022-06-28T17:30:50.896Z\",\"proofPurpose\":\"assertionMethod\",\"type\":\"EthereumEip712Signature2021\",\"proofValue\":\"0x40dd7ba73009aa5978f1064688280d6d181de1ed19cbbf7f41a395bfd68fe2dc5de4c90f91bd6a35714b2e2c14bc2c5afeb501664cf143daef036adbaf0553ac1c\",\"eip712Domain\":{\"domain\":{\"chainId\":1,\"name\":\"Sign to link this account to your identifier\",\"version\":\"1\"},\"messageSchema\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"}],\"CredentialSchema\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"}],\"CredentialSubject\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"Issuer\":[{\"name\":\"id\",\"type\":\"string\"}],\"Proof\":[{\"name\":\"created\",\"type\":\"string\"},{\"name\":\"proofPurpose\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"verificationMethod\",\"type\":\"string\"}],\"VerifiableCredential\":[{\"name\":\"@context\",\"type\":\"string[]\"},{\"name\":\"credentialSchema\",\"type\":\"CredentialSchema\"},{\"name\":\"credentialSubject\",\"type\":\"CredentialSubject\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"issuanceDate\",\"type\":\"string\"},{\"name\":\"issuer\",\"type\":\"Issuer\"},{\"name\":\"proof\",\"type\":\"Proof\"},{\"name\":\"type\",\"type\":\"string[]\"}]},\"primaryType\":\"VerifiableCredential\"}}}"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Request not authenticated, API token is missing or invalid!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "UNAUTHORIZED",
                                            "example": {
                                                "[object Object]": null
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 401
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. You don't have access to the relevant resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "FORBIDDEN",
                                            "example": {
                                                "name": "FORBIDDEN",
                                                "message": "string",
                                                "status": 403,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 403
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "NOT_FOUND",
                                            "example": {
                                                "name": "NOT_FOUND",
                                                "message": "string",
                                                "status": 404,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 404
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/profile/address/{eth_address}": {
            "get": {
                "summary": "Profile by Eth address",
                "description": "Given a valid ethereum address, return Disco profile data.",
                "operationId": "eth_address",
                "parameters": [
                    {
                        "name": "eth_address",
                        "in": "path",
                        "description": "Usually in the format 0xABC1234567890000",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful Operation!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "type": "array",
                                            "format": "of objects (Profile) unique",
                                            "default": "200 OK",
                                            "example": {
                                                "$ref": "./get_by_profile.json"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Request not authenticated, API token is missing, invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "UNAUTHORIZED",
                                            "example": {
                                                "name": "UNAUTHORIZED",
                                                "message": "string",
                                                "status": 401,
                                                "errors": [
                                                    {}
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 401
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "FORBIDDEN",
                                            "example": {
                                                "name": "FORBIDDEN",
                                                "message": "string",
                                                "status": 403,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 403
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Disco profile not found with this ethereum address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "NOT_FOUND",
                                            "example": {
                                                "name": "NOT_FOUND",
                                                "message": "string",
                                                "status": 404,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 404
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/profile/byTwitter/{twitter_handle}": {
            "get": {
                "summary": "Profile by Twitter Handle",
                "description": "Given a user's connected twitter handle, return Disco profile data. User must have linked Twitter account to Disco profile.",
                "operationId": "twitter_handle",
                "parameters": [
                    {
                        "name": "twitter_handle",
                        "in": "path",
                        "description": "twitter-handle",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful Operation!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "type": "array",
                                            "format": "of objects (Profile) unique",
                                            "default": "200 OK",
                                            "example": [
                                                {
                                                    "bio": "This is a bio",
                                                    "name": "Bob",
                                                    "avatar": "https://pbs.twimg.com/profile_images/1503385343730540544/dWdiICQX_400x400.jpg",
                                                    "ethAddress": "0xe6ff2d91f6eeee8bda4bcc562d63c431496fcf2a"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Request not authenticated, API token is missing, invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "UNAUTHORIZED",
                                            "example": {
                                                "name": "UNAUTHORIZED",
                                                "message": "string",
                                                "status": 401,
                                                "errors": [
                                                    {}
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 401
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "FORBIDDEN",
                                            "example": {
                                                "name": "FORBIDDEN",
                                                "message": "string",
                                                "status": 403,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 403
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "NOT_FOUND",
                                            "example": {
                                                "name": "NOT_FOUND",
                                                "message": "string",
                                                "status": 404,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 404
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/profile/byDomain/{domain}": {
            "get": {
                "summary": "Profile by domain",
                "description": "Given a user's domain, return Disco profile data. User must have linked domain and published a TXT record in the Disco UI.",
                "operationId": "domain",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "example": "http://disco.xyz",
                        "description": "A valid domain, like www.disco.xyz",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful Operation!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "type": "array",
                                            "format": "of objects (Profile) unique",
                                            "default": "200 OK",
                                            "example": [
                                                {
                                                    "bio": "This is a bio",
                                                    "name": "Bob",
                                                    "avatar": "https://pbs.twimg.com/profile_images/1503385343730540544/dWdiICQX_400x400.jpg",
                                                    "ethAddress": "0xe6ff2d91f6eeee8bda4bcc562d63c431496fcf2a"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Request not authenticated, API token is missing, invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "UNAUTHORIZED",
                                            "example": {
                                                "name": "UNAUTHORIZED",
                                                "message": "string",
                                                "status": 401,
                                                "errors": [
                                                    {}
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 401
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. You don't have access to the relevant resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "FORBIDDEN",
                                            "example": {
                                                "name": "FORBIDDEN",
                                                "message": "string",
                                                "status": 403,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 403
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Disco profile not found with this twitter handle.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "NOT_FOUND",
                                            "example": {
                                                "name": "NOT_FOUND",
                                                "message": "string",
                                                "status": 404,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 404
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/profile/byDiscord/{discordHandle}": {
            "get": {
                "summary": "Profile by Discord username",
                "description": "Given a user's discord username, return Disco profile data. User must have linked Discord handle to Disco profile in setup steps!",
                "operationId": "discordHandle",
                "parameters": [
                    {
                        "name": "discordHandle",
                        "in": "path",
                        "description": "discordHandle",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful Operation!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "type": "array",
                                            "format": "of objects (Profile) unique",
                                            "default": "200 OK",
                                            "example": [
                                                {
                                                    "bio": "This is a bio",
                                                    "name": "Bob",
                                                    "avatar": "https://pbs.twimg.com/profile_images/1503385343730540544/dWdiICQX_400x400.jpg",
                                                    "ethAddress": "0xe6ff2d91f6eeee8bda4bcc562d63c431496fcf2a"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Request not authenticated, API token is missing, invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "UNAUTHORIZED",
                                            "example": {
                                                "name": "UNAUTHORIZED",
                                                "message": "string",
                                                "status": 401,
                                                "errors": [
                                                    {}
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 401
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. You don't have access to the relevant resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "FORBIDDEN",
                                            "example": {
                                                "name": "FORBIDDEN",
                                                "message": "string",
                                                "status": 403,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 403
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Disco profile not found with this discord handle.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "NOT_FOUND",
                                            "example": {
                                                "name": "NOT_FOUND",
                                                "message": "string",
                                                "status": 404,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 404
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/profile/{DID}/credentials": {
            "get": {
                "summary": "Credentials by DID",
                "description": "Given a user's DID, return public credentials. Will not return private credentials. Users must set the credential visibility to 'public' in the UI.",
                "operationId": "credentials",
                "parameters": [
                    {
                        "name": "DID",
                        "in": "path",
                        "description": "usually in format DID:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful Operation!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "credentials": {
                                            "type": "array",
                                            "format": "of objects credentials unique",
                                            "default": "200 OK",
                                            "example": [
                                                {
                                                    "id": "did:3:kjzl6cwe1jw14bfc93dsmejffll3j687kpq3te8ntmcjb98erxj9x8mdrdompf6#7cec6d96-d829-427b-bb3d-941637316b07",
                                                    "type": [
                                                        "VerifiableCredential",
                                                        "OfficialDisconautCredential"
                                                    ],
                                                    "proof": {
                                                        "type": "EthereumEip712Signature2021",
                                                        "created": "2022-08-03T01:43:20.784Z",
                                                        "proofValue": "0x758f9c664b838426ad74411ec454a19cfec70708da212be4e6639af65b5851e63bfff3c85790f60b5a808b2c30c35991dc970656d9c9a3a0910242167ebc25a31b",
                                                        "eip712Domain": {
                                                            "domain": {
                                                                "name": "Disco Verifiable Credential",
                                                                "chainId": 1,
                                                                "version": "1"
                                                            },
                                                            "primaryType": "VerifiableCredential",
                                                            "messageSchema": {
                                                                "Proof": [
                                                                    {
                                                                        "name": "created",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "name": "proofPurpose",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "name": "type",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "name": "verificationMethod",
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "Issuer": [
                                                                    {
                                                                        "name": "id",
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "EIP712Domain": [
                                                                    {
                                                                        "name": "name",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "name": "version",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "name": "chainId",
                                                                        "type": "uint256"
                                                                    }
                                                                ],
                                                                "CredentialSubject": [
                                                                    {
                                                                        "name": "id",
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "VerifiableCredential": [
                                                                    {
                                                                        "name": "@context",
                                                                        "type": "string[]"
                                                                    },
                                                                    {
                                                                        "name": "credentialSubject",
                                                                        "type": "CredentialSubject"
                                                                    },
                                                                    {
                                                                        "name": "id",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "name": "issuanceDate",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "name": "issuer",
                                                                        "type": "Issuer"
                                                                    },
                                                                    {
                                                                        "name": "proof",
                                                                        "type": "Proof"
                                                                    },
                                                                    {
                                                                        "name": "type",
                                                                        "type": "string[]"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "proofPurpose": "assertionMethod",
                                                        "verificationMethod": "did:3:kjzl6cwe1jw14bfc93dsmejffll3j687kpq3te8ntmcjb98erxj9x8mdrdompf6#controller"
                                                    },
                                                    "issuer": {
                                                        "id": "did:3:kjzl6cwe1jw14bfc93dsmejffll3j687kpq3te8ntmcjb98erxj9x8mdrdompf6"
                                                    },
                                                    "@context": [
                                                        "https://www.w3.org/2018/credentials/v1"
                                                    ],
                                                    "issuanceDate": "2022-08-03T01:43:20.784Z",
                                                    "credentialSchema": {
                                                        "id": "https://raw.githubusercontent.com/discoxyz/disco-schemas/main/json/OfficialDisconautCredential/1-0-0.json",
                                                        "type": "JsonSchemaValidator2018"
                                                    },
                                                    "credentialSubject": {
                                                        "id": "did:3:kjzl6cwe1jw149mq5riadts0nk6glwype5j2cnib0qobc9hju3ufqtmwi75lk96",
                                                        "edition": 1
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Request not authenticated, API token is missing, invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "UNAUTHORIZED",
                                            "example": {
                                                "name": "UNAUTHORIZED",
                                                "message": "string",
                                                "status": 401,
                                                "errors": [
                                                    {}
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 401
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. You don't have access to the relevant resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "FORBIDDEN",
                                            "example": {
                                                "name": "FORBIDDEN",
                                                "message": "string",
                                                "status": 403,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 403
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "NOT_FOUND",
                                            "example": {
                                                "name": "NOT_FOUND",
                                                "message": "string",
                                                "status": 404,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 404
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/search/profiles?type={type}&handle={handle}": {
            "get": {
                "summary": "Search for profile by platform and handle.",
                "description": "Given a specific platform and handle, return DID if a Disco Profile exists. Requires user to link accounts",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Platform to use in search for user. Currently supports - discord, twitter, domain.",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    {
                        "name": "handle",
                        "in": "path",
                        "description": "The twitter handle, discord, or full domain to search for. Omit all @'s. If searching for domain, including the https:// or www. is fine!",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful Operation!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "format": "of objects (Profile) unique",
                                            "default": "200 OK",
                                            "example": [
                                                [
                                                    "did:3:kjzl6cwe1jw14a9nrywk04v122uyrh4x3yr0w7jxwx35396ny2cjz0aigh9m0zd"
                                                ]
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Request not authenticated, API token is missing, invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "UNAUTHORIZED",
                                            "example": {
                                                "name": "UNAUTHORIZED",
                                                "message": "string",
                                                "status": 401,
                                                "errors": [
                                                    {}
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 401
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. You don't have access to the relevant resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "FORBIDDEN",
                                            "example": {
                                                "name": "FORBIDDEN",
                                                "message": "string",
                                                "status": 403,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 403
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The error name",
                                            "default": "NOT_FOUND",
                                            "example": {
                                                "name": "NOT_FOUND",
                                                "message": "string",
                                                "status": 404,
                                                "errors": [
                                                    {
                                                        "name": "string",
                                                        "message": "string"
                                                    }
                                                ],
                                                "stack": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "An error message"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "The status code of the exception",
                                            "default": 404
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "A list of related errors"
                                        },
                                        "stack": {
                                            "type": "string",
                                            "description": "The stack trace (only in development mode)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}