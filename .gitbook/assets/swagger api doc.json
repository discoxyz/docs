{"openapi":"3.0.3","info":{"version":"v1","title":"Disco API","contact":{"name":"Disco Team","email":"ask@disco.xyz"}},"components":{"securitySchemes":{"apiKey":{"type":"apiKey","in":"header","name":"Authorization"}},"schemas":{"Forbidden":{"type":"object","properties":{"name":{"type":"string","description":"The error name","minLength":1,"example":"FORBIDDEN","default":"FORBIDDEN"},"message":{"type":"string","description":"An error message","minLength":1},"status":{"type":"number","description":"The status code of the exception","example":403,"default":403},"errors":{"type":"array","items":{"$ref":"#/components/schemas/GenericError"},"description":"A list of related errors"},"stack":{"type":"string","description":"The stack trace (only in development mode)"}},"required":["name","message","status"]},"GenericError":{"type":"object","properties":{"name":{"type":"string","description":"The error name","minLength":1},"message":{"type":"string","description":"An error message","minLength":1}},"additionalProperties":true,"required":["name","message"]},"Unauthorized":{"type":"object","properties":{"name":{"type":"string","description":"The error name","minLength":1,"example":"UNAUTHORIZED","default":"UNAUTHORIZED"},"message":{"type":"string","description":"An error message","minLength":1},"status":{"type":"number","description":"The status code of the exception","example":401,"default":401},"errors":{"type":"array","items":{"$ref":"#/components/schemas/GenericError"},"description":"A list of related errors"},"stack":{"type":"string","description":"The stack trace (only in development mode)"}},"required":["name","message","status"]},"NotFound":{"type":"object","properties":{"name":{"type":"string","description":"The error name","minLength":1,"example":"NOT_FOUND","default":"NOT_FOUND"},"message":{"type":"string","description":"An error message","minLength":1},"status":{"type":"number","description":"The status code of the exception","example":404,"default":404},"errors":{"type":"array","items":{"$ref":"#/components/schemas/GenericError"},"description":"A list of related errors"},"stack":{"type":"string","description":"The stack trace (only in development mode)"}},"required":["name","message","status"]},"InternalServerError":{"type":"object","properties":{"name":{"type":"string","description":"The error name","minLength":1,"example":"INTERNAL_SERVER_ERROR","default":"INTERNAL_SERVER_ERROR"},"message":{"type":"string","description":"An error message","minLength":1},"status":{"type":"number","description":"The status code of the exception","example":500,"default":500},"errors":{"type":"array","items":{"$ref":"#/components/schemas/GenericError"},"description":"A list of related errors"},"stack":{"type":"string","description":"The stack trace (only in development mode)"}},"required":["name","message","status"]},"UserLoginResult":{"type":"object","properties":{"did":{"type":"string"},"token":{"type":"string"}}},"VcBrandOptions":{"type":"object"},"CredentialRequestData":{"type":"object"},"SearchCredentialRequest":{"type":"object"},"BadRequest":{"type":"object","properties":{"name":{"type":"string","description":"The error name","minLength":1,"example":"BAD_REQUEST","default":"BAD_REQUEST"},"message":{"type":"string","description":"An error message","minLength":1},"status":{"type":"number","description":"The status code of the exception","example":400,"default":400},"errors":{"type":"array","items":{"$ref":"#/components/schemas/GenericError"},"description":"A list of related errors"},"stack":{"type":"string","description":"The stack trace (only in development mode)"}},"required":["name","message","status"]},"MultiDidRequest":{"type":"object"},"BatchStorageRequest":{"type":"object"},"IssueCredentialsRequest":{"type":"object","properties":{"issuer":{"type":"string","example":"did:web:api.disco.xyz/v1/disco","description":"The DID of the credential issuer","title":"Issuer"},"schema":{"type":"string","example":"https://raw.githubusercontent.com/discoxyz/disco-schemas/main/json/GMCredential/1-0-0.json","description":"The credential schema","title":"Schema"},"suite":{"type":"string","example":"jwt","description":"Signing suite. Use jwt or 712","title":"Suite"},"subjects":{"type":"array","example":"[\n        {\n            \"subject\": { \"id\": \"did:3:abc123\" },\n            \"recipient\": \"did:3:abc123\",\n            \"expirationDate\": \"\"\n        }\n    ]","description":"One or more credential recipient DIDs","title":"Subject"}}},"DidWebRequest":{"type":"object","properties":{"alias":{"type":"string","example":"did:web:api.disco.xyz/v1/disco","description":"The DID of the credential issuer","title":"Alias"},"method":{"type":"string","example":"did:web","description":"DID method - only did:web is supported","title":"Method"},"requestorDid":{"type":"string","example":"did:3:abc123organization","description":"The DID to create the did:web DID for. The DID requestion must be an Organization.","title":"Requestor DID"}}},"PersonaUpdate":{"type":"object"},"ProfileModel":{"type":"object","properties":{"profile":{"type":"array","uniqueItems":true,"items":{"$ref":"#/components/schemas/Profile"}}}},"Profile":{"type":"object","properties":{"bio":{"type":"string","example":"This is a bio","description":"Bio of the profile. This can be updated once they sign into Disco.","title":"bio","minLength":3},"name":{"type":"string","example":"Bob","description":"Self-attested name or identifier that they'd like to go by.","title":"name","minLength":3},"avatar":{"type":"string","example":"https://pbs.twimg.com/profile_images/1503385343730540544/dWdiICQX_400x400.jpg","description":"image url of their PFP, or any other image they'd like to display as their Disco pfp!","title":"avatar","minLength":20},"ethAddress":{"type":"string","example":"0xe6ff2d91f6eeee8bda4bcc562d63c431496fcf2a","description":"This is the eth address. Usually in the format 0xABC123456890","title":"ethAddress","minLength":20}}}}},"security":[{"apiKey":[]}],"paths":{"/v1/apikey":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Gets All API Keys","parameters":[],"tags":["ApiKeyController"],"operationId":"apiKeyControllerGetAllUserApiKeys"},"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"ApiKey Created"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Creates an API Key","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"name":{"type":"string"}},"type":"object"}}}},"tags":["ApiKeyController"],"operationId":"apiKeyControllerCreateUserApiKey"},"delete":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"ApiKey Deleted"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Deletes an API Key","parameters":[{"in":"query","name":"name","required":false,"schema":{"type":"string"}}],"tags":["ApiKeyController"],"operationId":"apiKeyControllerDeleteUserApiKey"}},"/v1/apikey/admin/create":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"ApiKey Created"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Creates an API Key","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"name":{"type":"string"},"roles":{"type":"array","items":{"oneOf":[{"type":"integer","multipleOf":1},{"type":"number"},{"type":"string"},{"type":"boolean"},{"type":"array"},{"type":"object"}],"nullable":true}},"userDid":{"type":"string"}},"type":"object"}}}},"tags":["ApiKeyController"],"operationId":"apiKeyControllerCreateApiKey"}},"/v1/apikey/admin/delete":{"delete":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"ApiKey Deleted"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Deletes an API Key","parameters":[{"in":"query","name":"name","required":false,"schema":{"type":"string"}},{"in":"query","name":"userDid","required":false,"schema":{"type":"string"}}],"tags":["ApiKeyController"],"operationId":"apiKeyControllerDeleteApiKey"}},"/v1/auth/{ethAddress}/betaAccess":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerError"}}}}},"summary":"Check for access to beta","parameters":[{"in":"path","name":"ethAddress","required":true,"schema":{"type":"string"}}],"tags":["AuthController"],"operationId":"authControllerCheckBetaAccess"}},"/v1/auth/nonce":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"}},"type":"object"}}}},"tags":["AuthController"],"operationId":"authControllerNonce"}},"/v1/auth/login":{"post":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserLoginResult"}}},"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"type":"object"}}}},"tags":["AuthController"],"operationId":"authControllerLogin"}},"/v1/auth/refresh":{"post":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserLoginResult"}}},"description":"Success"}},"parameters":[],"tags":["AuthController"],"operationId":"authControllerRefresh"}},"/v1/auth/logout":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"}},"parameters":[],"tags":["AuthController"],"operationId":"authControllerLogout"}},"/v1/auth/userinfo":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Success"}},"parameters":[],"tags":["AuthController"],"operationId":"authControllerUserInfo"}},"/v1/credential/branding":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Return branding information for an org","parameters":[{"in":"query","name":"did","required":false,"schema":{"type":"string"}},{"in":"query","name":"vcId","required":false,"schema":{"type":"string"}}],"tags":["CredentialController"],"operationId":"credentialControllerGetVcBranding"},"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Updates current branding or creates new branding info if not exists","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"},"orgOptions":{"$ref":"#/components/schemas/VcBrandOptions"},"vcId":{"type":"string"}},"type":"object"}}}},"tags":["CredentialController"],"operationId":"credentialControllerSaveVcBranding"}},"/v1/credential/defaults":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Return default values for an org","parameters":[{"in":"query","name":"did","required":false,"schema":{"type":"string"}},{"in":"query","name":"vcId","required":false,"schema":{"type":"string"}}],"tags":["CredentialController"],"operationId":"credentialControllerGetVcDefaults"},"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Update default values for an org","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"},"defaultValues":{"type":"string"},"vcId":{"type":"string"}},"type":"object"}}}},"tags":["CredentialController"],"operationId":"credentialControllerSaveVcDefaults"}},"/v1/credential/{id}":{"get":{"responses":{"200":{"description":"Success"}},"summary":"Returns a single credential using the vc.id","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"tags":["CredentialController"],"operationId":"credentialControllerGetCredentialById"},"patch":{"responses":{"200":{"description":"Success"}},"summary":"Set credential public/private and archived","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}},{"in":"query","name":"isPublic","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"isArchived","required":false,"schema":{"type":"boolean"}}],"tags":["CredentialController"],"operationId":"credentialControllerUpdateCredential"},"put":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"sig":{"type":"string"}},"type":"object"}}}},"tags":["CredentialController"],"operationId":"credentialControllerAssignSignature"}},"/v1/credential/verify":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Verify a EIP-712 or JWT VC signed by a 3id","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"vc":{"type":"string"}},"type":"object"}}}},"tags":["CredentialController"],"operationId":"credentialControllerVerifyVc"}},"/v1/credential":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerError"}}},"description":"Credential not created"}},"summary":"Given a request body with a schema url and fields, generate and return a signed credential. This will also write to the recipient's data backpack. To skip signing, set skipSign to true in the request data.","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialRequestData"}}}},"tags":["CredentialController"],"operationId":"credentialControllerIssueCredential"},"delete":{"responses":{"200":{"description":"Success"}},"summary":"Archive a credential, can also use PATCH to update isArchived value","parameters":[{"in":"query","name":"id","required":false,"schema":{"type":"string"}}],"tags":["CredentialController"],"operationId":"credentialControllerDeleteCredential"}},"/v1/credential/tempStore/{did}/all":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Temp vc store","parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["CredentialCacheController"],"operationId":"credentialCacheControllerGetTempVcs"}},"/v1/credential/tempStore/{id}":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Temp vc store","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"tags":["CredentialCacheController"],"operationId":"credentialCacheControllerGetTempVc"}},"/v1/credential/tempStore":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Temp vc store","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"},"vc":{"type":"string"}},"type":"object"}}}},"tags":["CredentialCacheController"],"operationId":"credentialCacheControllerStoreTempVc"},"delete":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Temp vc store","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"vcId":{"type":"string"}},"type":"object"}}}},"tags":["CredentialCacheController"],"operationId":"credentialCacheControllerDeleteTempVc"}},"/v1/credentials/search":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"query","name":"field","required":false,"schema":{"type":"string"}},{"in":"query","name":"op","required":false,"schema":{"type":"string"}},{"in":"query","name":"value","required":false,"schema":{"type":"string"}},{"in":"query","name":"page","required":false,"schema":{"type":"number"}},{"in":"query","name":"size","required":false,"schema":{"type":"number"}}],"tags":["CredentialsController"],"operationId":"credentialsControllerSearch"},"post":{"responses":{"200":{"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchCredentialRequest"}}}},"tags":["CredentialsController"],"operationId":"credentialsControllerMultisearch"}},"/v1/credentials/filter/type/{did}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}},{"in":"query","name":"types","required":false,"schema":{"type":"string"}}],"tags":["CredentialsController"],"operationId":"credentialsControllerGetCredentialsFilteredByType"}},"/v1/credentials/isDiscoMember/{did}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["CredentialsController"],"operationId":"credentialsControllerIsUserDiscoMember"}},"/v1/credentials/encrypted/{did}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["CredentialsController"],"operationId":"credentialsControllerGetEncryptedCredentialsByDid"},"post":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"credentials":{"type":"array","items":{"oneOf":[{"type":"integer","multipleOf":1},{"type":"number"},{"type":"string"},{"type":"boolean"},{"type":"array"},{"type":"object"}],"nullable":true}}},"type":"object"}}}},"tags":["CredentialsController"],"operationId":"credentialsControllerSaveDecryptedCredentials"}},"/v1/credentials/count":{"post":{"responses":{"200":{"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"dids":{"type":"array","items":{"oneOf":[{"type":"integer","multipleOf":1},{"type":"number"},{"type":"string"},{"type":"boolean"},{"type":"array"},{"type":"object"}],"nullable":true}}},"type":"object"}}}},"tags":["CredentialsController"],"operationId":"credentialsControllerGetCredentialCountForDid"}},"/v1/credentials/{did}":{"get":{"responses":{"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"}}},"description":"Bad Request"}},"description":"Retrieves all verifiable credentials for a given DID. Optionally the return can be paginated using the query parameters \"page\" and \"size\".","summary":"Retrieve all verifiable credentials for a DID","parameters":[{"description":"The holder DID to retrieve credentials for","in":"path","name":"did","required":true,"schema":{"type":"string","example":"did:web:api.disco.xyz/v1/disco"}},{"description":"Page number to get, defaults to 1. For example if size=10 use page=2 to get credentails 11-20.","in":"query","name":"page","required":false,"schema":{"type":"number","example":"1"}},{"description":"Number of credentials per page, defaults to 20","in":"query","name":"size","required":false,"schema":{"type":"number","example":"20"}}],"tags":["CredentialsController"],"operationId":"credentialsControllerGetCredentialsByDid"}},"/v1/credentials/multi":{"post":{"responses":{"200":{"description":"Success"}},"summary":"Returns all credentials for an array of dids","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MultiDidRequest"}}}},"tags":["CredentialsController"],"operationId":"credentialsControllerGetCredentialsForDids"}},"/v1/credentials/storePartnerBatch":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Partner batch vc store","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchStorageRequest"}}}},"tags":["CredentialsController"],"operationId":"credentialsControllerStorePartnerLargeBatch"}},"/v1/credentials/fetchPartnerBatch":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Partner batch vc store","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"}},"type":"object"}}}},"tags":["CredentialsController"],"operationId":"credentialsControllerFetchPartnerLargeBatch"}},"/v1/credentials":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"}}},"description":"Bad Request"}},"description":"Batch issue verifiable credentials","summary":"Issue one or more verifiable credentials","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueCredentialsRequest"}}}},"tags":["CredentialsController"],"operationId":"credentialsControllerIssueCredentials"}},"/v1/{did}/.well-known/did.json":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"No profile found"}},"description":"Returns the public facing did:web document for a given DID. For example, using https://api.disco.xyz/v1/{your did:web alias}/.well-known/did.json.\n  ```json\n  {\n    \"@context\": [\n        \"https://www.w3.org/ns/did/v1\",\n        \"https://w3id.org/security/v2\",\n        \"https://w3id.org/security/suites/secp256k1recovery-2020/v2\"\n    ],\n    \"id\": \"did:web:api.disco.xyz/v1/disco\",\n    \"verificationMethod\": [\n        {\n            \"id\": \"did:web:api.disco.xyz/v1/disco#137e71d6-13fa-4e7e-88fe-f5535c6c1dc2\",\n            \"type\": \"EcdsaSecp256k1VerificationKey2019\",\n            \"controller\": \"did:web:api.disco.xyz/v1/disco\",\n            \"publicKeyHex\": \"042733cd35bc188b400769164bc52e2f9628dcfa18c26a6058afc81f125a2e0988308c6ec3436e2a28bb09e3d75a177c1935008f6a96db526c92d6c30bc0013aa8\"\n        }\n    ],\n    \"authentication\": [\n        \"did:web:api.disco.xyz/v1/disco#137e71d6-13fa-4e7e-88fe-f5535c6c1dc2\"\n    ],\n    \"assertionMethod\": [\n        \"did:web:api.disco.xyz/v1/disco#137e71d6-13fa-4e7e-88fe-f5535c6c1dc2\"\n    ],\n    \"keyAgreement\": [],\n    \"service\": []\n  }\n  ```","summary":"Retrieve the did:web DID document","parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["DidWebController"],"operationId":"didWebControllerGetDidDoc"}},"/v1/did/admin/createDid":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"boolean"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"}},"summary":"Create a new did:web DID","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DidWebRequest"}}}},"tags":["DidWebController"],"operationId":"didWebControllerCreateDid"}},"/v1/discord/discordLink":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"boolean"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"Validated Discord Attestation","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"messageUrl":{"type":"string"},"did":{"type":"string"},"discordUsername":{"type":"string"}},"type":"object"}}}},"tags":["DiscordController"],"operationId":"discordControllerValidateDiscordAttestation"}},"/v1/github/account":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"boolean"}}},"description":"returns github userData"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"returns github userdata for add disco linkage","parameters":[{"in":"query","name":"handle","required":false,"schema":{"type":"string"}},{"in":"query","name":"did","required":false,"schema":{"type":"string"}}],"tags":["GithubController"],"operationId":"githubControllerGetGithubAccount"}},"/v1/HealthCheck/twitter":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"boolean"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"","parameters":[],"tags":["HealthCheckController"],"operationId":"healthCheckControllerTwitterHealthCheck"}},"/v1/HealthCheck/discord":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"boolean"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"","parameters":[],"tags":["HealthCheckController"],"operationId":"healthCheckControllerDiscordHealthCheck"}},"/v1/lens/lensPublication":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"boolean"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"","parameters":[{"in":"query","name":"did","required":false,"schema":{"type":"string"}},{"in":"query","name":"handle","required":false,"schema":{"type":"string"}}],"tags":["LensController"],"operationId":"lensControllerGetLensAccount"}},"/v1/persona/user/disco/{did}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["PersonaController"],"operationId":"personaControllerIsUser"}},"/v1/persona/user/org/{did}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["PersonaController"],"operationId":"personaControllerIsOrgUser"}},"/v1/persona/{did}":{"post":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["PersonaController"],"operationId":"personaControllerCreatePersona"}},"/v1/persona":{"patch":{"responses":{"200":{"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonaUpdate"}}}},"tags":["PersonaController"],"operationId":"personaControllerUpdatePersona"}},"/v1/persona/did/metadata/{did}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["PersonaDidController"],"operationId":"personaDidControllerGetPersonaMetadata"}},"/v1/persona/did/{did}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["PersonaDidController"],"operationId":"personaDidControllerGetPersonaByDid"}},"/v1/persona/find/eth/{eoa}":{"get":{"responses":{"200":{"description":"Success"}},"description":"Returns a profile via its linked ETH Address. Usually in the format: 0xABC1234567890","parameters":[{"in":"path","name":"eoa","required":true,"schema":{"type":"string"}}],"tags":["PersonaSearchController"],"operationId":"personaSearchControllerGetPersonaByEthereumAddress"}},"/v1/persona/find/{type}/{handle}":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"type","required":true,"schema":{"type":"string"}},{"in":"path","name":"handle","required":true,"schema":{"type":"string"}}],"tags":["PersonaSearchController"],"operationId":"personaSearchControllerGetPersonasByHandle"}},"/v1/persona/link":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"query","name":"did","required":false,"schema":{"type":"string"}},{"in":"query","name":"type","required":false,"schema":{"type":"string"}},{"in":"query","name":"handle","required":false,"schema":{"type":"string"}}],"tags":["PersonaLinkController"],"operationId":"personaLinkControllerGetLink"}},"/v1/persona/link/evidence":{"post":{"responses":{"200":{"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"},"type":{"type":"string"},"handle":{"type":"string"},"evidence":{"type":"string"}},"type":"object"}}}},"tags":["PersonaLinkController"],"operationId":"personaLinkControllerAddEvidence"}},"/v1/persona/link/create":{"post":{"responses":{"200":{"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"},"type":{"type":"string"},"handle":{"type":"string"}},"type":"object"}}}},"tags":["PersonaLinkController"],"operationId":"personaLinkControllerCreateAccountLink"}},"/v1/persona/link/request":{"post":{"responses":{"200":{"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"},"type":{"type":"string"},"handle":{"type":"string"}},"type":"object"}}}},"tags":["PersonaLinkController"],"operationId":"personaLinkControllerCreateAccountLink_1"}},"/v1/persona/link/verify":{"post":{"responses":{"200":{"description":"Success"}},"parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"did":{"type":"string"},"type":{"type":"string"},"handle":{"type":"string"},"linkages":{"type":"object"}},"type":"object"}}}},"tags":["PersonaLinkController"],"operationId":"personaLinkControllerVerifyAccountLink"}},"/v1/persona/link/{type}":{"post":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"type","required":true,"schema":{"type":"string"}}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"handle":{"type":"string"},"evidence":{"type":"string"},"did":{"type":"string"}},"type":"object"}}}},"tags":["PersonaLinkController"],"operationId":"personaLinkControllerSetLink"}},"/v1/persona/link/{id}":{"delete":{"responses":{"200":{"description":"Success"}},"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"tags":["PersonaLinkController"],"operationId":"personaLinkControllerDeleteLink"}},"/v1/profile/address/{address}":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileModel"}}},"description":"Successful operation"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized. Request not authenticated, API token is missing, invalid or expired."},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"description":"Returns a profile via its linked ETH Address. Usually in the format: 0xABC1234567890","summary":"Gets a Profile via its linked Eth Address","parameters":[{"in":"path","name":"address","required":true,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsGetProfileByAddress"}},"/v1/profile/domainLink":{"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"Posts and checks the domain dns entries for a DID link","parameters":[],"requestBody":{"required":false,"content":{"application/json":{"schema":{"properties":{"domain":{"type":"string"},"did":{"type":"string"}},"type":"object"}}}},"tags":["Profile Endpoints"],"operationId":"profileEndpointsSetDomainLink"}},"/v1/profile/byDomain/{domain}":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileModel"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"Gets a profile vis its linked domain","parameters":[{"in":"path","name":"domain","required":true,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsGetProfileByDomain"}},"/v1/profile/byTwitter/{twitterHandle}":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileModel"}}},"description":"Successful Operation!"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized. Request not authenticated, API token is missing, invalid or expired."},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"description":"Returns a profile via its linked twitter account. Takes in url param /twitter-handle","summary":"Gets a profile vis its linked twitter account","parameters":[{"in":"path","name":"twitterHandle","required":true,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsGetProfileByTwitter"}},"/v1/profile/byDiscord/{discordHandle}":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileModel"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"Gets a profile vis its linked twitter account","parameters":[{"in":"path","name":"discordHandle","required":true,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsGetProfileByDiscord"}},"/v1/profile/{did}":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileModel"}}},"description":"Successful operation!"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized. Request not authenticated, API token is missing, invalid or expired."},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint Not found"}},"summary":"Gets a Profile via its 3ID","description":"Returns a profile via its 3ID","parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsGetProfileByDid"},"post":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"Posts the did for the user","parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsCreateUser"}},"/v1/profile/{did}/credentials/byTypes":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"Gets credentials for a did by type","parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}},{"in":"query","name":"types","required":false,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsGetCredentialsByDidAndTypes"}},"/v1/profile/{did}/credentials":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"Gets credentials for a did","parameters":[{"in":"path","name":"did","required":true,"schema":{"type":"string"}}],"tags":["Profile Endpoints"],"operationId":"profileEndpointsGetCredentialsByDid"}},"/v1/reports":{"get":{"responses":{"200":{"description":"Success"}},"parameters":[],"tags":["ReportController"],"operationId":"reportControllerGetMetrics"}},"/v1/search":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"No users found"}},"description":"Search for holder DIDs by their linked account handle names. For example, Discord or Twitter handles. Returns an array of DIDs.","summary":"Search by any user handle","parameters":[{"description":"User handle","in":"query","name":"handle","required":false,"schema":{"type":"string","example":"provenauthority"}}],"tags":["SearchController"],"operationId":"searchControllerGetSearch"}},"/v1/search/specific":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"object"}}},"description":"Success"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"No users found"}},"summary":"search","parameters":[{"in":"query","name":"type","required":false,"schema":{"type":"object"}},{"in":"query","name":"handle","required":false,"schema":{"type":"string"}}],"tags":["SearchController"],"operationId":"searchControllerGetSearchSpecific"}},"/v1/twitter/twitterUrl":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"boolean"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"","parameters":[{"in":"query","name":"did","required":false,"schema":{"type":"string"}},{"in":"query","name":"handle","required":false,"schema":{"type":"string"}}],"tags":["TwitterController"],"operationId":"twitterControllerGetTwitterUrl"}},"/v1/twitter/directTwitterUrl":{"get":{"responses":{"200":{"content":{"*/*":{"schema":{"type":"boolean"}}}},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unauthorized"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Forbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}},"description":"Endpoint not found"}},"summary":"","parameters":[{"in":"query","name":"did","required":false,"schema":{"type":"string"}},{"in":"query","name":"tweetUrl","required":false,"schema":{"type":"string"}}],"tags":["TwitterController"],"operationId":"twitterControllerGetDirectTwitterUrl"}}},"tags":[{"name":"ApiKeyController"},{"name":"AuthController"},{"name":"CredentialController"},{"name":"CredentialCacheController"},{"name":"CredentialsController"},{"name":"DidWebController"},{"name":"DiscordController"},{"name":"GithubController"},{"name":"HealthCheckController"},{"name":"LensController"},{"name":"PersonaController"},{"name":"PersonaDidController"},{"name":"PersonaSearchController"},{"name":"PersonaLinkController"},{"name":"Profile Endpoints"},{"name":"ReportController"},{"name":"SearchController"},{"name":"TwitterController"}]}